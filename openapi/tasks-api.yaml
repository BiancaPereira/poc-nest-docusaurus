openapi: 3.0.3
info:
  title: Tasks API
  description: Simple REST API for managing tasks/todos built with NestJS framework
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server

tags:
  - name: tasks
    description: Operations related to task management

paths:
  /tasks:
    get:
      tags:
        - tasks
      summary: Get all tasks
      description: Retrieve a list of all tasks
      operationId: getAllTasks
      responses:
        '200':
          description: List of tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Internal server error

    post:
      tags:
        - tasks
      summary: Create a new task
      description: Create a new task with the provided details
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDto'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad request - invalid input data
        '500':
          description: Internal server error

  /tasks/{id}:
    get:
      tags:
        - tasks
      summary: Get task by ID
      description: Retrieve a specific task by its ID
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Task ID
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '500':
          description: Internal server error

    put:
      tags:
        - tasks
      summary: Update task by ID
      description: Update an existing task with the provided details
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Task ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskDto'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad request - invalid input data
        '404':
          description: Task not found
        '500':
          description: Internal server error

    delete:
      tags:
        - tasks
      summary: Delete task by ID
      description: Delete a specific task by its ID
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Task ID
      responses:
        '200':
          description: Task deleted successfully
        '404':
          description: Task not found
        '500':
          description: Internal server error

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the task
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Task title
          example: "Complete project documentation"
        description:
          type: string
          description: Task description
          example: "Write comprehensive documentation for the tasks API"
        completed:
          type: boolean
          description: Whether the task is completed
          example: false
        createdAt:
          type: string
          format: date-time
          description: Task creation timestamp
          example: "2023-12-01T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Task last update timestamp
          example: "2023-12-01T10:00:00Z"
      required:
        - id
        - title
        - completed
        - createdAt
        - updatedAt

    CreateTaskDto:
      type: object
      properties:
        title:
          type: string
          description: Task title
          example: "Complete project documentation"
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: Task description
          example: "Write comprehensive documentation for the tasks API"
          maxLength: 500
      required:
        - title

    UpdateTaskDto:
      type: object
      properties:
        title:
          type: string
          description: Task title
          example: "Complete project documentation"
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: Task description
          example: "Write comprehensive documentation for the tasks API"
          maxLength: 500
        completed:
          type: boolean
          description: Whether the task is completed
          example: true
